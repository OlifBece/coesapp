- model_class = Catedra
- if current_admin.mas_altos?
  = btn_add_success new_catedra_path, 'Agregar Nueva Cátedra', 'Nueva'

%table#dataTableCat.table-striped.table-sm.table-hover.table-bordered.table-responsive-md.mt-3
  %thead
    %tr
      %th= model_class.human_attribute_name(:id)
      %th= model_class.human_attribute_name(:descripcion)
      %th Departamentos
      %th
        = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de asignaturas para el período actual' do
          Asigs
      %th 
        = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de secciones para el período actual' do
          Seccs
      %th
        = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de inscripciones para el período actual' do
          Inscr
      %th Actividad
      %th=t '.actions', default: t("helpers.actions")
  %tbody
    - @catedras.each do |catedra|
      %tr
        %td= catedra.id
        %td= catedra.descripcion
        %td
          %table.table
            - catedra.departamentos.each do |c| 
              %tr
                %td= c.descripcion_completa.upcase
        %td= catedra.asignaturas.count
        %td= catedra.secciones.count
        %td= catedra.inscripcionsecciones.count
        %td=l catedra.updated_at, format: :short
        %td
          = link_to catedra_path(catedra), class: 'btn btn-sm', title: "#{ t('.show', default: t('helpers.links.show')) }" do
            = glyph 'info-sign'
          = link_to edit_catedra_path(catedra), class: 'btn btn-sm', title: "#{ t('.edit', default: t('helpers.links.edit')) }" do
            = glyph 'pencil'
          - if current_admin.ninja?
            = link_to catedra_path(catedra), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure?')) }, class: 'btn btn-sm', title: "#{ t('.destroy', default: t('helpers.links.destroy')) }" do
              .text-danger= glyph 'trash'
:javascript

  $(document).ready(function() {

    $('a[data-toggle="tab"]').on( 'shown.bs.tab', function (e) {
      $($.fn.dataTable.tables( true ) ).css('width', '100%');
      $($.fn.dataTable.tables( true ) ).DataTable().columns.adjust().draw();
    } );

    $('#dataTableCat').DataTable({
      scrollY: 300,
      // pageLength: 100,
      // lengthChange: false,
      paging: false,
      responsive: true,
      /* dom: '<"html5buttons"B>lTfgitp',
      buttons: [
        {extend: 'excel', title: 'ExcelListaSeccion'},
        {extend: 'pdf', title: 'PDFListaSeccion'}

        {extend: 'print',
          customize: function (win){
            $(win.document.body).addClass('white-bg');
            $(win.document.body).css('font-size', '10px');

            $(win.document.body).find('table')
              .addClass('compact')
              .css('font-size', 'inherit');
        }
        } 
      ], */
      language: 
        {
          "sProcessing":     "Procesando...",
          "sLengthMenu":     "Mostrar _MENU_ registros",
          "sZeroRecords":    "No se encontraron resultados",
          "sEmptyTable":     "Ningún dato disponible en esta tabla",
          "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
          "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
          "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
          "sInfoPostFix":    "",
          "sSearch":         "Buscar:",
          "sUrl":            "",
          "sInfoThousands":  ",",
          "sLoadingRecords": "Cargando...",
          "oPaginate": {
            "sFirst":    "Primero",
            "sLast":     "Último",
            "sNext":     "Siguiente",
            "sPrevious": "Anterior"
          },
          "oAria": {
            "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
          }
        }

    });
  } );

