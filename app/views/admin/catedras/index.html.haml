- model_class = Catedra
- if (current_admin and current_admin.autorizado? 'Catedras', 'create')
  = btn_add_success new_catedra_path, 'Agregar Nueva Cátedra', 'Nueva'
  %br
  %br
.border.p-2
  %table#dataTableCat.table-striped.table-sm.table-hover.table-bordered.table-responsive-md.mt-3
    %thead
      %tr
        %th Escuela
        %th Descripción
        %th Departamentos
        %th
          = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de asignaturas para el período actual' do
            Asigs
        %th 
          = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de secciones para el período actual' do
            Seccs
        %th
          = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: 'Total de inscripciones para el período actual' do
            Inscr
        %th Actividad
        %th=t '.actions', default: t("helpers.actions")
    %tbody
      - @catedras.each do |catedra|
        %tr
          %td= catedra.departamentos.joins(:escuela).collect{|d| d.escuela.descripcion}.uniq.to_sentence
          %td= catedra.descripcion
          %td
            %table.table
              - catedra.departamentos.each do |d| 
                %tr
                  %td= link_to_if (current_admin and current_admin.autorizado? 'Departamentos', 'index') ,d.descripcion.upcase, departamento_path(d)
          %td= catedra.asignaturas.count
          %td= catedra.secciones.count
          %td= catedra.inscripcionsecciones.count
          %td=l catedra.updated_at, format: :short
          %td
            - if (current_admin and current_admin.autorizado? 'Catedras', 'show')
              = link_to catedra_path(catedra), class: 'btn btn-sm', title: "#{ t('.show', default: t('helpers.links.show')) }" do
                = glyph 'info-sign'
            - if (current_admin and current_admin.autorizado? 'Catedras', 'update')
              = link_to edit_catedra_path(catedra), class: 'btn btn-sm', title: "#{ t('.edit', default: t('helpers.links.edit')) }" do
                = glyph 'pencil'
            - if (current_admin and current_admin.autorizado? 'Catedras', 'destroy')
              - if !(catedra.asignaturas.any?)
                = link_to catedra_path(catedra), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure?')) }, class: 'btn btn-sm', title: "#{ t('.destroy', default: t('helpers.links.destroy')) }" do
                  .text-danger= glyph 'trash'
              - else
                .btn.btn-sm.tooltip-btn{'data-toggle': :tooltip, title: 'Elimine las asignaturas asociadas a la cátedra para activar la opción'}
                  .text-muted= glyph 'trash'

:javascript

  $(document).ready(function() {

    $('a[data-toggle="tab"]').on( 'shown.bs.tab', function (e) {
      $($.fn.dataTable.tables( true ) ).css('width', '100%');
      $($.fn.dataTable.tables( true ) ).DataTable().columns.adjust().draw();
    } );

    $('#dataTableCat').DataTable({
      scrollY: 300,
      // pageLength: 100,
      // lengthChange: false,
      paging: false,
      responsive: true,
      /* dom: '<"html5buttons"B>lTfgitp',
      buttons: [
        {extend: 'excel', title: 'ExcelListaSeccion'},
        {extend: 'pdf', title: 'PDFListaSeccion'}

        {extend: 'print',
          customize: function (win){
            $(win.document.body).addClass('white-bg');
            $(win.document.body).css('font-size', '10px');

            $(win.document.body).find('table')
              .addClass('compact')
              .css('font-size', 'inherit');
        }
        } 
      ], */
      language: 
        {
          "sProcessing":     "Procesando...",
          "sLengthMenu":     "Mostrar _MENU_ registros",
          "sZeroRecords":    "No se encontraron resultados",
          "sEmptyTable":     "Ningún dato disponible en esta tabla",
          "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
          "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
          "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
          "sInfoPostFix":    "",
          "sSearch":         "Buscar:",
          "sUrl":            "",
          "sInfoThousands":  ",",
          "sLoadingRecords": "Cargando...",
          "oPaginate": {
            "sFirst":    "Primero",
            "sLast":     "Último",
            "sNext":     "Siguiente",
            "sPrevious": "Anterior"
          },
          "oAria": {
            "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
          }
        },

        initComplete: function () {
            this.api().columns(0).every( function () {
                var column = this;
                var select = $('<select style="width: 220px;" class="form-control form-control-sm float-left"><option value="">Filtrar Escuela</option></select>')
                    .insertBefore( $('#dataTableCat_filter').parent().parent() )
                    .on( 'change', function () {
                        var val = $.fn.dataTable.util.escapeRegex(
                            $(this).val()
                        );
 
                        column
                            .search( val ? '^'+val+'$' : '', true, false )
                            .draw();
                    } );
 
                column.data().unique().sort().each( function ( d, j ) {
                    select.append( '<option value="'+d+'">'+d+'</option>' )
                } );
            } );
        }

    });
  } );

