%h5
  %table.table.table-striped.table-sm.table-bordered.table-responsive-md.mt-3
    %tr
      %td{style: 'width:5%;'} Roles:
      - @usuario.roles_generales.each do |r| 
        %td
          = r.to_s.titleize
          - if current_admin.ninja?
            = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: "Eliminar rol como #{r.titleize}"  do
              = link_to "#{delete_rol_usuario_path(@usuario)}?#{r.downcase}=true", class: 'btn btn-sm', data: { confirm: 'Esta acción eliminará irreversiblemente todas las asociaciones del rol de usuario como asignaturas y calificaciones. ¿Está Seguro?'} do
                .text-danger= glyph 'trash'

- if current_admin.altos?
  %h6
    Agregar Roles:
    - unless @estudiante
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Estudiante", "Estudiante", 'set_estudiante'
      = render '/admin/usuarios/set_estudiante'
    - if !@administrador and current_admin.maestros?
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Administrador", "Administrador", 'set_admin'
      = render '/admin/usuarios/set_administrador'
    - unless @profesor
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Profesor", "Profesor", 'set_profesor'
      = render '/admin/usuarios/set_profesor'

    - if @estudiante #and @estudiante.valido_para_inscribir? current_periodo.id
      = btn_inscribir seleccionar_inscripcionseccion_path(@estudiante), 'Inscripción del periodo actual', 'Inscribir'
%nav
  .nav.nav-tabs
    - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : '' 
    = link_to 'Datos Personales y de Contacto', "#personales", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'personal')"
    - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
    = link_to 'Como Estudiante', "#historial", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'estudiante')" if @estudiante
    - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
    = link_to 'Como Profesor', "#profesor", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'profesor')" if @profesor
    - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
    = link_to 'Como Administrador', "#administrador", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'administrador')" if @administrador
      
.tab-content
  - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : ''  
  .tab-pane#personales{class: activeTab}
    .border.mt-3.p-3
      = render partial: '/admin/usuarios/personales_contacto'
  - if @estudiante
    - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
    .tab-pane#historial.p-3{class: activeTab}
      %nav
        .nav.nav-tabs
          - if @secciones_pci_pendientes.any?
            - activeTabPCI = (session[:tabEscuela].eql? 'pci') ? 'active' : ''
            = link_to '¡Asignaturas sin Escuela asignadas!', "#pane_PCI", "data-toggle": :tab, class: "nav-item nav-link alert alert-danger #{activeTab}", onclick: "setTab('tabEscuela', 'pci')"
          - @estudiante.escuelas.each do |escuela|
            - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''  
            = link_to "#{escuela.descripcion.titleize}", "#pane_#{escuela.id}", "data-toggle": :tab, class: "nav-item nav-link #{activeTab}", onclick: "setTab('tabEscuela', '#{escuela.id}')"
          .nav-item.nav-link
            = simple_icon_toggle_modal 'Registrar en Escuela', 'success', 'plus', 'agregar_escuela'
            = render '/admin/estudiantes/agregar_escuela'
      .tab-content
        - if @secciones_pci_pendientes.any?
          .tab-pane{id: "pane_PCI", class: activeTabPCI}
            .border.mt-3.p-3
              %h6.alert.alert-danger.pb-ms-3#alertPCI Tome en cuenta que el estudiante puede no estar inscrito en todas sus escuelas. Por favor verifique que aparecen las pestañas correspondiantes.
              %h6.alert.alert-danger.pb-ms-3#alertPCI Asignaturas pendientes por asignar escuelas (PCI):
              - @foraneas = true
              = render partial: '/admin/estudiantes/table_contenido_historial', locals: {inscripciones: @secciones_pci_pendientes}
        - @foraneas = false
        - @escuelas_del_estudiante = @estudiante.escuelas
        - @escuelas_del_estudiante.each do |escuela|
          - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''
          - @escuela = escuela
          .tab-pane{id: "pane_#{escuela.id}", class: activeTab}
            .border.mt-3.p-3
              - @inscripciones = @estudiante.inscripcionsecciones.joins(:escuela).where("escuelas.id = :e or pci_escuela_id = :e", e: @escuela.id)
              - periodo_ids = @inscripciones.joins(:seccion).group("secciones.periodo_id").count.keys
              %h6.alert.alert-info.pb-ms-3
                = "Escuela: #{@escuela.descripcion.titleize}"
                - if current_admin.maestros?
                  = simple_icon_toggle_modal 'Eliminar Escuela', 'danger', 'minus', "eliminar#{escuela.id}"
                  = render partial: '/admin/estudiantes/eliminar_escuela'

              = render '/admin/historialplanes/index'
              = render '/admin/combinaciones/index' if @escuela.id.eql? 'IDIO'

              -# @curso = @estudiante.grados.where(escuela_id: escuela.id).first
              -# @inscripciones = @curso.inscripciones
              - @periodos = Periodo.where(id: periodo_ids).order(inicia: :desc)

              = render partial: '/admin/estudiantes/historial_academico'

  - if @profesor
    - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
    .tab-pane#profesor{class: activeTab}
      = render partial: '/admin/profesores/show'

  - if current_admin.mas_altos? and @administrador
    - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
    .tab-pane#administrador{class: activeTab}

      .border.mt-3.p-3
        %h6.alert.alert-info.pb-ms-3
          = @administrador.descripcion
          - if current_admin.maestros?
            = simple_icon_toggle_modal_edit "Cambiar Tipo de Administrador a #{@nickname}", 'set_admin'
            = render '/admin/usuarios/set_administrador'

- content = render partial: 'admin/inscripcionsecciones/form_cambio_seccion', locals: {secciones: Seccion.where(id: nil)}
- url = cambiar_seccion_inscripcionsecciones_path
= render partial: '/layouts/modal_layout', locals: {url: url, id_modal: 'cambiarSeccion', title: 'Cambiar Sección', content: content}

:javascript

  function setupCambioSeccion(id, secciones){

    document.getElementById('cambiarSeccionForm')[2].value = id
    let select = document.getElementById('inscripcionseccion_seccion_id')

    for(var i = 1; i < select.options.length; i++) {
      //select.options[i] = null
      select.remove(i)
    }
    console.log(select.length)
    for(var i = 0; i < secciones.length; i++) select.options[i+1] = new Option(secciones[i][1], secciones[i][0]);

    // document.getElementById('cabiarSeccion').modal()
    $('#cambiarSeccion').modal()
  }

  function setTab(type, id){
    $.ajax({
      url: "#{set_tab_principal_admin_index_path}", 
      data: {key: type, value: id}, 
      dataType: 'json'
      });
  }

  $('.setSession').click(function(elem){
    console.log(elem)
  })

- if false #@secciones_pci_pendientes.any?
  :javascript

    function sendData(url,data){
      $.ajax({
        url: url,
        type: 'GET',
        data: data,
        beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        success: function (html) {
          console.log(html)
          //$('#alertPCI').html(html);
        }        
      });

    }
    $('.asignar_escuela').change(function(){
      let pci_escuela_id, inscrip_id;
      pci_escuela_id = $(this).val()
      inscrip_id = $(this).attr('id')
      console.log(pci_escuela_id);
      console.log(inscrip_id);

      sendData('#{set_escuela_pci_inscripcionsecciones_path}', {id: inscrip_id, pci_escuela_id: pci_escuela_id});

    });


