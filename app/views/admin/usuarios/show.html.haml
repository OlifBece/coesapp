
%h6.alert.alert-info.p-2
  Roles:
  - @usuario.roles_generales.each do |r|    
    = r.to_s.titleize
    - if current_admin.ninja?
      = content_tag :b, class: 'tooltip-btn', 'data_toggle'=> :tooltip, title: "Eliminar rol como #{r.titleize}"  do
        = link_to "#{delete_rol_usuario_path(@usuario)}?#{r.downcase}=true", class: 'btn btn-sm', data: { confirm: 'Esta acción eliminará irreversiblemente todas las asociaciones del rol de usuario como asignaturas y calificaciones. ¿Está Seguro?'} do
          .text-danger= glyph 'minus'

- if current_admin.altos?
  %h6.alert.alert-success.p-2
    Agregar Rol:
    - unless @estudiante
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Estudiante", "Estudiante", 'setEstudiante'
      = render '/admin/usuarios/set_estudiante'
    - if !@administrador and current_admin.maestros?
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Administrador", "Administrador", 'setAdmin'
      = render '/admin/usuarios/set_administrador'
    - unless @profesor
      = btn_toggle_modal 'plus', "Registrar a #{@nickname} como Profesor", "Profesor", 'setProfesor'
      = render '/admin/usuarios/set_profesor'
%nav
  .nav.nav-tabs
    - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : '' 
    = link_to 'Datos Personales y de Contacto', "#personales", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'personal')"
    - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
    = link_to 'Como Estudiante', "#historial", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'estudiante')" if @estudiante
    - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
    = link_to 'Como Profesor', "#profesor", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'profesor')" if @profesor
    - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
    = link_to 'Como Administrador', "#administrador", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'administrador')" if @administrador
    - if current_admin and current_admin.maestros?
      - activeTab = (session[:usuarioTypeTab].eql? 'bitacora') ? 'active' : ''  
      = link_to 'Bitácora', "#bitacora", "data-toggle"=> "tab", class: "nav-item nav-link #{activeTab}", onclick: "setTab('usuarioTypeTab', 'bitacora')"
      
  .tab-content
    - activeTab = (session[:usuarioTypeTab].eql? 'personal') ? 'active' : ''  
    .tab-pane#personales.border.p-3.border-top-0{class: activeTab}
      = render partial: '/admin/usuarios/personales_contacto'
    - if @estudiante
      - activeTab = (session[:usuarioTypeTab].eql? 'estudiante') ? 'active' : ''  
      .tab-pane#historial.p-3.border.p-3.border-top-0{class: activeTab}
        %nav
          .nav.nav-tabs
            - if @secciones_pci_pendientes.any?
              - activeTabPCI = (session[:tabEscuela].eql? 'pci') ? 'active' : ''
              = link_to '¡Asignaturas sin Escuela asignadas!', "#pane_PCI", "data-toggle": :tab, class: "nav-item nav-link alert alert-danger #{activeTab}", onclick: "setTab('tabEscuela', 'pci')"
            - @estudiante.escuelas.each do |escuela|
              - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''  
              = link_to "#{escuela.descripcion.titleize}", "#pane_#{escuela.id}", "data-toggle": :tab, class: "nav-item nav-link #{activeTab}", onclick: "setTab('tabEscuela', '#{escuela.id}')"
            .nav-item.nav-link
              = simple_icon_toggle_modal 'Registrar en Escuela', 'success', 'plus', 'agregar_escuela'
              = render '/admin/estudiantes/agregar_escuela'
            - if @estudiante #and @estudiante.valido_para_inscribir? current_periodo.id
              .nav-item= btn_inscribir seleccionar_inscripcionseccion_path(@estudiante), 'Inscripción del periodo actual', 'Inscribir'
        .tab-content
          - if @secciones_pci_pendientes.any?
            .tab-pane.border.p-3.border-top-0{id: "pane_PCI", class: activeTabPCI}            
              %h6.alert.alert-danger.pb-ms-3#alertPCI Tome en cuenta que el estudiante puede no estar inscrito en todas sus escuelas. Por favor verifique que aparecen las pestañas correspondiantes.
              %h6.alert.alert-danger.pb-ms-3#alertPCI Asignaturas pendientes por asignar escuelas (PCI):
              - @foraneas = true
              = render partial: '/admin/estudiantes/table_contenido_historial', locals: {inscripciones: @secciones_pci_pendientes}
          - @foraneas = false
          -# @escuelas_del_estudiante = @estudiante.grados
          - @escuelas_del_estudiante = @estudiante.escuelas
          - @estudiante.grados.each do |grado|
            - escuela = grado.escuela
            - activeTab = (session[:tabEscuela].eql? escuela.id) ? 'active' : ''
            - @escuela = escuela
            .tab-pane.border.p-3.border-top-0{id: "pane_#{escuela.id}", class: activeTab}
              - @inscripciones = @estudiante.inscripcionsecciones.joins(:escuela).where("escuelas.id = :e or pci_escuela_id = :e", e: @escuela.id)
              -# @inscripciones = grado.inscripcionsecciones # ¡¡¡ Probar !!!
              - periodo_ids = @inscripciones.joins(:seccion).group("secciones.periodo_id").count.keys
              %h6.alert.alert-info.pb-ms-3
                = "Escuela: #{@escuela.descripcion.titleize}"
                - if current_admin.maestros?
                  = simple_icon_toggle_modal 'Eliminar Escuela', 'danger', 'minus', "eliminar#{escuela.id}"
                  = render partial: '/admin/estudiantes/eliminar_escuela'
              .border.p-1
                %h6.titulo.text-center Información de la inscripción
                %table.table.table-striped.table-sm.table-hover.table-bordered.table-responsive-md.mt-3
                  %tbody
                    %tr
                      %th Periodo de la Inscripción: 
                      %td= grado.iniciado_periodo_id
                      %td                      
                    %tr
                      %th Estado de la Inscripción: 
                      %td= grado.estado_inscripcion.upcase
                      %td
                        = link_to 'javascript:void(0)', onclick: "$('#cambiarEstadoInscripcion#{grado.id}').modal()" do
                          = glyph 'pencil'
                    %tr
                      %th Tipo de Ingreso:
                      %td= grado.tipo_ingreso
                      %td
                        = link_to 'javascript:void(0)', onclick: "$('#cambiarTipoIngreso#{grado.id}').modal()" do
                          = glyph 'pencil'
                    %tr
                      %th Inscrito en la UCV:
                      %td
                        - if grado.inscrito_ucv
                          .text-success= glyph 'ok'
                        - else
                          .text-danger= glyph 'remove'
                      %td
                        = link_to "#{cambiar_inscripcion_grado_path}?estudiante_id=#{@estudiante.id}&escuela_id=#{@escuela.id}&[grado]inscrito_ucv=#{!grado.inscrito_ucv}", method: 'post'  do
                          = glyph 'pencil'
              %br
              - content = render partial: '/admin/grados/form_cambiar_inscripcion', locals: {title: 'Estado de Inscripción:', group: Grado.estado_inscripciones, field_name: 'estado_inscripcion', grade: grado}
              - url = cambiar_inscripcion_grado_path
              = render partial: '/layouts/modal_layout', locals: {url: url, id_modal: "cambiarEstadoInscripcion#{grado.id}", title: 'Cambiar Inscripción', content: content}
              - content = render partial: '/admin/grados/form_cambiar_inscripcion', locals: {title: 'Tipo Inscripción:', group: Grado.tipos_ingreso, field_name: 'tipo_ingreso', grade: grado}
              = render partial: '/layouts/modal_layout', locals: {url: url, id_modal: "cambiarTipoIngreso#{grado.id}", title: 'Cambiar Tipo Ingreso', content: content}                

              = render '/admin/historialplanes/index'
              = render '/admin/combinaciones/index' if @escuela.id.eql? 'IDIO'

              -# @curso = @estudiante.grados.where(escuela_id: escuela.id).first
              -# @inscripciones = @curso.inscripciones
              - @periodos = Periodo.where(id: periodo_ids).order(inicia: :desc)

              = render partial: '/admin/estudiantes/historial_academico'

    - if @profesor
      - activeTab = (session[:usuarioTypeTab].eql? 'profesor') ? 'active' : ''  
      .tab-pane#profesor.border.p-3.border-top-0{class: activeTab}
        = render partial: '/admin/profesores/show'

    - if current_admin.mas_altos? and @administrador
      - activeTab = (session[:usuarioTypeTab].eql? 'administrador') ? 'active' : ''  
      .tab-pane#administrador.border.p-3.border-top-0{class: activeTab}
        %h6.alert.alert-info.pb-ms-3
          = @administrador.descripcion
          - if current_admin.maestros?
            = simple_icon_toggle_modal_edit "Cambiar Tipo de Administrador a #{@nickname}", 'setAdmin'
            = render '/admin/usuarios/set_administrador'



    - if current_admin and current_admin.maestros?
      - activeTab = (session[:usuarioTypeTab].eql? 'bitacora') ? 'active' : ''  
      .tab-pane#bitacora.border.p-3.border-top-0{class: activeTab}
        %br
        %h6.text-center.titulo Acciones del usuario:
        - @bitacoras = @usuario.bitacoras.limit(50).order(created_at: :desc)
        = render '/admin/bitacoras/index'
        %br
        %h6.text-center.titulo Actividades aplicadas al usuario:
        - @bitacoras = Bitacora.search(@usuario.id).limit(50).order(created_at: :desc)
        = render '/admin/bitacoras/index'

- content = render partial: 'admin/inscripcionsecciones/form_cambio_seccion', locals: {secciones: Seccion.where(id: nil)}
- url = cambiar_seccion_inscripcionsecciones_path
= render partial: '/layouts/modal_layout', locals: {url: url, id_modal: 'cambiarSeccion', title: 'Cambiar Sección', content: content}


:javascript

  function setupCambioSeccion(id, secciones){

    document.getElementById('cambiarSeccionForm')[2].value = id
    let select = document.getElementById('inscripcionseccion_seccion_id')

    for(var i = 1; i < select.options.length; i++) {
      //select.options[i] = null
      select.remove(i)
    }
    console.log(select.length)
    for(var i = 0; i < secciones.length; i++) select.options[i+1] = new Option(secciones[i][1], secciones[i][0]);

    // document.getElementById('cabiarSeccion').modal()
    $('#cambiarSeccion').modal()
  }

- if false #@secciones_pci_pendientes.any?
  :javascript

    function sendData(url,data){
      $.ajax({
        url: url,
        type: 'GET',
        data: data,
        beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        success: function (html) {
          console.log(html)
          //$('#alertPCI').html(html);
        }        
      });

    }
    $('.asignar_escuela').change(function(){
      let pci_escuela_id, inscrip_id;
      pci_escuela_id = $(this).val()
      inscrip_id = $(this).attr('id')
      console.log(pci_escuela_id);
      console.log(inscrip_id);

      sendData('#{set_escuela_pci_inscripcionsecciones_path}', {id: inscrip_id, pci_escuela_id: pci_escuela_id});

    });


