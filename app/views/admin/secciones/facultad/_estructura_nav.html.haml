- if session[:escuela] and session[:escuela].eql? 'pci'

	- if session[:inscripcion_estudiante_id]
		- estudiante = Estudiante.find session[:inscripcion_estudiante_id]
		- inscripciones = estudiante.inscripciones
		- @ids_asignaturas = inscripciones.del_periodo(current_periodo.id).collect{|i| i.seccion.asignatura_id}
		- @ids_aprobadas = inscripciones.aprobadas.collect{|i| i.seccion.asignatura_id}
		- escuelas = current_admin.escuelas.merge estudiante.escuelas
		- if escuelas.count.eql? 1
			- @asigTabs = current_periodo.programaciones.pcis.reject{|pr| escuelas.include? pr.asignatura.escuela}.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}
		- else
			- @asigTabs = current_periodo.programaciones.pcis.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}
	- else
		- @asigTabs = current_periodo.programaciones.pcis.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}

	- if session[:asignatura]
		- @asignatura = Asignatura.find session[:asignatura]
		- @secciones = @asignatura.secciones.del_periodo(current_periodo.id)          
	- else
		- @secciones = Seccion.where(id: [])

- else
	- @dptosTabs = Escuela.find(session[:escuela]).departamentos.order('descripcion ASC') if session[:escuela] 
	- if session[:departamento]
		- @catTabs = Departamento.find(session[:departamento]).catedras.order('descripcion ASC')
		- @asigTabs = Catedra.find(session[:catedra]).asignaturas.del_departamento(session[:departamento]).order('descripcion ASC') if session[:catedra]
		- if session[:asignatura]
			- @asignatura = Asignatura.find session[:asignatura]
			- @secciones = @asignatura.secciones.del_periodo(current_periodo.id)
		- elsif session[:catedra]
			- @secciones = Catedra.find(session[:catedra]).secciones.del_periodo(current_periodo.id).del_departamento(session[:departamento])

= render '/admin/secciones/facultad/all_tabs_nav'
= render '/admin/secciones/facultad/table_response_nav'
= render 'layouts/cargando'

