- if session[:escuela] and session[:escuela].eql? 'pci'

	- if session[:inscripcion_estudiante_id]
		- estudiante = Estudiante.find session[:inscripcion_estudiante_id]
		- inscripciones = estudiante.inscripciones
		- @ids_asignaturas = inscripciones.del_periodo(current_periodo.id).collect{|i| i.seccion.asignatura_id}
		- @ids_aprobadas = inscripciones.aprobadas.collect{|i| i.seccion.asignatura_id}
		- escuelas = current_admin.escuelas.merge estudiante.escuelas
		- if escuelas.count.eql? 1
			- @asigTabs = current_periodo.programaciones.pcis.reject{|pr| escuelas.include? pr.asignatura.escuela}.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}
		- else
			- @asigTabs = current_periodo.programaciones.pcis.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}
	- else
		- @asigTabs = current_periodo.programaciones.pcis.collect{|pr| pr.asignatura}.sort_by{|a| a.descripcion}

	- if session[:asignatura]
		- @asignatura = Asignatura.find session[:asignatura]
		- @secciones = @asignatura.secciones.del_periodo(current_periodo.id)          
	- else
		- @secciones = Seccion.where(id: [])

- else
	- @dptosTabs = Escuela.find(session[:escuela]).departamentos.order('descripcion ASC') if session[:escuela] 
	- if session[:departamento]
		- @catTabs = Departamento.find(session[:departamento]).catedras.order('descripcion ASC')
		- @asigTabs = Catedra.find(session[:catedra]).asignaturas.del_departamento(session[:departamento]).order('descripcion ASC') if session[:catedra]
		- if session[:asignatura]
			- @asignatura = Asignatura.find session[:asignatura]
			- @secciones = @asignatura.secciones.del_periodo(current_periodo.id)
		- elsif session[:catedra]
			- @secciones = Catedra.find(session[:catedra]).secciones.del_periodo(current_periodo.id).del_departamento(session[:departamento])

= render '/admin/secciones/facultad/all_tabs_nav'
= render '/admin/secciones/facultad/table_response_nav'
= render 'layouts/cargando'

:javascript

	function updatePage(type, id){
		let currentUrl = window.location.href
		let controller = (currentUrl.includes('inscripcionsecciones/seleccionar')) ? 'inscripcionsecciones' : 'secciones'

		limpiarResultados()
		setTab(type, id)
		setHeader(id)
		if (type == 'asignatura' || ((controller == 'secciones') && (type == 'catedra' || id == 'pci'))){
			getSecciones(type, id, controller)
		}else{
			paintTabObjects(type,id)
		}
	}

	function setHeader(id){
		if(id == 'pci') {
			$('#normalHeader').addClass('d-none')
			$('#pciHeader').removeClass('d-none')
		}else{
			$('#normalHeader').removeClass('d-none')
			$('#pciHeader').addClass('d-none')
		}
	}

	function limpiarResultados(){
		$('#responseTotal').hide()
		$('#tableResponse').html("")
		$('#no_encontrado').hide()
		$("#resultado tbody").html("")
		$("#descAsignatura").html("") 
		$('#btnNuevaSeccion').hide()
	}

	function setAsignaturaToNewSeccion(id, desc){
		$('#_seccionasignatura_id').val(`${id}`)
		$('#nueva_seccion_titulo').html(`Nueva Sección para ${desc}`)
	}

	function showNewAsig(id) {
		let desc = $('#asignatura_'+id).text()
		setAsignaturaToNewSeccion(id, desc)
		$('#btnNuevaSeccion').show()
	}

	function getSecciones(type,id, controller) {
		if (type == 'asignatura'){
			// let desc = $('#asignatura_'+id).text()
			let desc = document.getElementById("asignatura_"+id).firstChild.textContent
			let cred = document.getElementById("bagCreditos"+id).firstChild.textContent
			desc += " ("+cred+" Unidades de Créditos)"
			$('#descAsignatura').html(`${desc}`)
			if (controller == 'secciones') showNewAsig(id)
		}
		$('#responseTotal').show()
		$.ajax({
			url: '#{get_secciones_secciones_path}',
			data: {id: id, type: type, controlador: controller},
			dataType: 'json', 
			beforeSend: function() {$('#cargando').modal({keyboard: false, show: true, backdrop: 'static'});},
			success: function(data){
				if(data.secciones_length === 0){
					$('#no_encontrado').show();
				}else{
					$('#tableResponse').html(data.th)
					if (type == 'asignatura' && controller == 'inscripcionsecciones'){
						let radios = document.getElementsByClassName(id)
						for (var i=0; i<radios.length; i++)  {
							
							let aux = document.getElementById('tr'+radios[i].id)
							if (aux !== null) radios[i].checked = true
						}
					}

				}
			},
			complete: function(){
				$('.modal').modal('hide')
				if (type != 'asignatura'){
					paintTabObjects(type,id)
				}
				$('.tooltip-btn').tooltip()
			}
		});
	}

	function paintTabObjects(type, id){

		let ele = $('#' + type + 'Tabs')
		ele.nextAll('.tabs').remove()

		$.ajax({
			url: "#{get_tab_objects_secciones_path}",
			data: {type: type, value: id},
			dataType: 'json', 
			success: function(data){
				$('#filterTabs').append(data.tabs)
			},
			beforeSend: function(){
				$('#cargando').modal({keyboard: false, show: true, backdrop: 'static'})
			},
			complete: function(){
				$('.modal').modal('hide')
				$('.tooltip-btn').tooltip()
			}

		});
	}


	function setTab(type, id){
		$.ajax({
			url: "#{set_tab_principal_admin_index_path}", 
			data: {key: type, value: id}, 
			dataType: 'json'
			});
	}
