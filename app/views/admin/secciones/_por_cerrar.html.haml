
%br
= form_tag(calificar_seccion_path) do
	= hidden_field_tag "id", @seccion.id
	= hidden_field_tag "cerrar", true
	%table.table.table-bordered.table-striped.table-sm.table-hover{style: "text-align:left;"}
		= render 'admin/secciones/tabla_headers_tipo_seccion'#, locals: {inscripciones: inscripciones}

		%tbody
			- inscripciones.each_with_index do |es,i|
				- disable = es.pi? || es.retirado?#(es.diferido? || es.reparacion?)
				- disable_porterior = es.pi? || !(es.diferido? || es.reparacion?) || es.retirado?
				%tr{id: "reg_#{es.estudiante_id}", class: es.tr_class_style_qualify}

					= render partial: 'admin/secciones/tabla_content_tipo_seccion', locals: {i: i, es: es, seccion: @seccion, disable: disable}
					- if es.retirado?
						%td
						%td
						%td
					- else		
						%td= check_box_tag "[est][#{es.estudiante_id}]pi", true, es.pi?, {onclick: "desactivar_por_pi(this, #{es.estudiante_id});", class: 'pi', ci: es.estudiante_id}
						
						%td= check_box_tag "[est][#{es.estudiante_id}]nd", true, es.diferido?, {onclick: "desactivar_por_nd(this, #{es.estudiante_id});", tipo: "ND"}

						%td= check_box_tag "[est][#{es.estudiante_id}]nr", true, es.reparacion?, {onclick: "desactivar_por_nd(this, #{es.estudiante_id});", tipo: "NR"}
					
					- unless @seccion.asignatura.absoluta?
						- tipo = ""
						- tipo = "ND" if es.diferido?
						- tipo = "NR" if es.reparacion?
						- valor_posterior = es.calificacion_posterior.to_i if es.calificacion_posterior
						%td= number_field_tag "[est][#{es.estudiante_id}]calificacion_posterior", {}, {value: valor_posterior, class: 'form-control form-control-sm otra_calificacion', required: !disable_porterior, disabled: disable_porterior,  :step => 1, :in => 0...21, onchange: "numero_a_letras($(this).val(), #{es.estudiante_id});", tipo_calificacion_id: tipo, id_obj: es.id}

					%td= text_field_tag "[#{es.estudiante_id}]calificacion_en_letras", {}, {readonly: true, disabled: true, value: es.calificacion_en_letras, class: 'form-control form-control-sm'}
	%hr
		= submit_tag "Guardar", id: "submit", class: "btn btn-outline-success float-right ml-md-2", disable_with: "Espere..."
:javascript


	window.onload = function() {
		$('.calificable').change(function(){
			let id = $(this).attr('id_obj'),
			tipo = $(this).attr('tipo_calificacion_id'),
			val = $(this).val(),
			values = `{"inscripcionseccion_id": ${id}, "calificacion": ${val}, "tipo_calificacion_id": "${tipo}"}`

			console.log(values)
			send_data(values)

		});

		$('.otra_calificacion').change(function(){
			let id = $(this).attr('id_obj'),
			tipo = $(this).attr('tipo_calificacion_id'),
			val = $(this).val(),
			values = `{"inscripcionseccion_id": ${id}, "calificacion_posterior": ${val}, "tipo_calificacion_id": "${tipo}"}`
			
			console.log(values)
			send_data(values)

		});

		$('#vacios_a_pi').click(function(){
			let padre = $(this)
			$('.pi').each(function(){
				let ci, final, post;
				ci = $(this).attr('ci')

				final = $('#_est_' + ci + 'calificacion_final').val()
				var val1 = padre.prop('checked')
				var val2 = $(this).prop('checked')
				if ((val1 != val2) & (final == 0 | final === undefined)){
					$(this).click()
					console.log(ci+ " : "+final)
				}
			});

		});
		
	}

	function send_data(values){
		$.ajax({
			url: `#{cambiar_calificacion_inscripcionsecciones_path}`,
			type: 'POST',
			data: JSON.parse(values),
			dataType: 'json', 
			beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))}  
		})
		.done(function( msg ) {
			//$(`#reg_${msg}`).animate({backgroundColor: "#a7bf51"}, 800);


			$(`#reg_${msg}`).addClass(`table-success`)
			//$(`#reg_${msg}`).delay(1200).animate({"background-color": "#c3e6cb"})

			
			//$(`#reg_${msg}`).delay(2000).removeClass(`table-success`) 
			//removeClass(`table-success`)
			//$('#mensaje').html(`<div class="alert alert-success">${msg}</div>`);
			//$('#mensaje').hide(3000);
		});

	}
	
	function resetear_numericos(valor, ci){

		if (valor === true) {
			numero_a_letras('-1', ci);
		}else{
			numero_a_letras('0', ci);
		}
		$('#reg_' + ci + ' input[type="number"]').val('');
	}


	function desactivar_por_pi(obj, ci){
		let numeros, radios, inputs, valor, post, id, values;

		id = $('#_est_' + ci + 'calificacion_final').attr('id_obj')

		if(id === undefined){id = $('#_est_' + ci + 'calificacion_final_1').attr('id_obj')}

		inputs = $('#reg_' + ci + ' input');
		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');

		valor = $(obj).prop('checked');
		post = $('#_est_' + ci + 'calificacion_posterior');

		inputs.prop('disabled', valor);
		numeros.prop('required', !valor);

		$(obj).prop('disabled', false);
		$(obj).prop('required', false);
		post.prop('disabled', true);
		post.prop('required', false);

		if (valor === true) {
			numero_a_letras('-1', ci);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "PI"}`
		}else{
			numero_a_letras('0', ci);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "NF"}`
		}
		console.log(values)
		send_data(values)
		numeros.val('')

		radios.prop('checked', false);
		
		$("#_"+ci+"calificacion_en_letras").prop('disabled', true);
		$("#_"+ci+"calificacion_en_letras").prop('readonly', true);		
	}


	function desactivar_por_nd(obj, ci){
		var checks, post, valor, numeros, radios, id, values, final, aux, tipo;

		aux = $('#_est_' + ci + 'calificacion_final')

		id = aux.attr('id_obj')
		tipo = $(obj).attr('tipo')
		final = aux.val()

		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');
		checks = $('#reg_'+ci+' input:checkbox');
		
		post = $('#_est_' + ci + 'calificacion_posterior');

		valor = $(obj).prop('checked')

		checks.prop('disabled', valor);

		$(obj).prop('disabled', false);

		post.prop('disabled', !valor);
		post.prop('required', valor);
		

		if (valor === false){
			numero_a_letras('0', ci);
			numeros.val('');
			radios.prop('checked', false);
			values = `{"inscripcionseccion_id": ${id}, "calificacion": 0, "tipo_calificacion_id": "NF", "calificacion_posterior": 0}`
			send_data(values)

		}else{

			post.attr('tipo_calificacion_id', tipo)
		}
		console.log("Valores: "+values)
	
	}

	function desactivar_otros_inputs(obj, ci, nr){
		var checks, numeros, post, valor, radios;

		numeros = $('#reg_' + ci + ' input[type="number"]');
		radios = $('#reg_' + ci + ' input[type="radio"]');
		checks = $('#reg_' + ci + ' input:checkbox');

		post = $('#_est_' + ci + 'calificacion_posterior');

		valor = $(obj).prop('checked');

		numeros.prop('disabled', valor);
		checks.prop('disabled', valor);
		numeros.prop('required', !valor);
		$(obj).prop('disabled', false);

		if(nr == 1){
			post.prop('disabled', !valor);
			post.prop('required', valor);

			numero_a_letras('0', ci);

		}else{
			numero_a_letras('-1', ci);
		}
		$("#_"+ci+"calificacion_en_letras").prop('disabled', true);
		$("#_"+ci+"calificacion_en_letras").prop('readonly', true);		
	}


	function numero_a_letras(valor, ci){
	var final;
	switch (valor) {
		case 'A':
			final = "APROBADO";
			break;
		case 'AP':
			final = "APLAZADO";
			break;
		case '-1':
			final = "PÉRDIDA POR INASISTENCIA";
			break;
		case '0':
			final = "CERO CERO";
			break;
		case '1':
			final = "CERO UNO";
			break;
		case '2':
			final = "CERO DOS";
			break;
		case '3':
			final = "CERO TRES";
			break;
		case '4':
			final = "CERO CUATRO";
			break;
		case '5':
			final = "CERO CINCO";
			break;
		case '6':
			final = "CERO SEIS";
			break;
		case '7':
			final = "CERO SIETE";
			break;
		case '8':
			final = "CERO OCHO";
			break;
		case '9':
			final = "CERO NUEVE";
			break;
		case '10':
			final = "DIEZ";
			break;
		case '11':
			final = "ONCE";
			break;
		case '12':
			final = "DOCE";
			break;
		case '13':
			final = "TRECE";
			break;
		case '14':
			final = "CATORCE";
			break;
		case '15':
			final = "QUINCE";
			break;
		case '16':
			final = "DIEZ Y SEIS";
			break;
		case '17':
			final = "DIEZ Y SIETE";
			break;
		case '18':
			final = "DIEZ Y OCHO";
			break;
		case '19':
			final = "DIEZ Y NUEVE";
			break;
		case '20':
			final = "VEINTE";
			break;
		default:
		final = "POR DEFINIR";
	}
		$("#_"+ci+"calificacion_en_letras").val(final);

	}

	function calcular(p1,p2,p3,ci){
		let nota1, nota2, nota3, porcen1, porcen2, porcen3, final, cali_final, values;
		
		nota1 = $(`#_est_${ci}primera_calificacion`).val()
		nota2 = $(`#_est_${ci}segunda_calificacion`).val()
		nota3 = $(`#_est_${ci}tercera_calificacion`).val()

		porcen1 = (p1*nota1)/100;
		porcen1 =  Math.round(porcen1 * 10) / 10;
		porcen2 = (p2*nota2)/100;
		porcen2 =  Math.round(porcen2 * 10) / 10;
		porcen3 = (p3*nota3)/100;
		porcen3 =  Math.round(porcen3 * 10) / 10;
		$("#"+ci+"_calificacion_primera_text").text(porcen1);
		$("#"+ci+"_calificacion_segunda_text").text(porcen2);
		$("#"+ci+"_calificacion_tercera_text").text(porcen3);
		final = (porcen1+porcen2+porcen3).toFixed(0);
		
		cali_final = $("#_est_"+ci+"calificacion_final")
		cali_final.val(final)
		id = cali_final.attr('id_obj')

		if (nota1 == '') {nota1 = 0}
		if (nota2 == '') {nota2 = 0}
		if (nota3 == '') {nota3 = 0}

		values = `{"inscripcionseccion_id": ${id}, "calificacion": ${final}, "parciales": [${nota1},${nota2},${nota3}]}`

		console.log(values)

		send_data(values)
		numero_a_letras(final, ci)
	}


