= form_tag(calificar_seccion_path) do
	= hidden_field_tag "id", @seccion.id

	%table.table.table-bordered.table-striped.table-sm.table-hover{style: "text-align:left;"}
		%thead
			%tr
				= render 'admin/secciones/tabla_headers_tipo_seccion', locals: {seccion: @seccion}
				%th

		%tbody
			- inscripciones.each_with_index do |es,i|
				- retirada = es.retirado?
				- desactivada = calificada || retirada || es.pi? || es.no_presento?
				- @calificacion = 'table-success' if es.aprobada?
				- @calificacion = 'table-danger' if (es.aplazada? || es.pi? || retirada)
				- @muted = retirada ? "text-muted" : ""

				%tr{class: "#{@calificacion} #{@muted}"}

					= render partial: 'admin/secciones/tabla_content_tipo_seccion', locals: {i: i, es: es, seccion: @seccion}

					%td= radio_button_tag "[est][#{es.estudiante_id}]tipo", 'PI', es.pi?, onchange: "desactivar_resto(#{es.estudiante_id})"

					%td= radio_button_tag "[est][#{es.estudiante_id}]tipo", TipoCalificacion::DIFERIDO, es.diferido?

					%td= text_field_tag "[#{es.estudiante_id}]calificacion_en_letras", {}, {readonly: true, disabled: true, value: es.calificacion_en_letras, class: 'form-control form-control-sm'}

	%hr

		= submit_tag "Guardar", id: "submit", class: "btn btn-outline-success float-right", disable_with: "Espere...", data: {confirm: 'Una vez que guardes las calificaciones no podrás cambiar su valor, ¿Estás Seguro?'}
:javascript

	function desactivar_resto(ci){

		if ($("#_est_"+ci+"np").prop('checked') == true){
			$("#_"+ci+"calificacion_en_letras").val("NO PRESENTÓ");
			$("#_est_"+ci+"pi").prop('disabled', true);
		}else if ($("#_est_"+ci+"pi").prop('checked') == true){
			$("#_"+ci+"calificacion_en_letras").val("PÉRDIDA POR INASISTENCIA");
			$("#_est_"+ci+"calificacion_final").prop('disabled', true);
			$("#_est_"+ci+"calificacion_final").prop('readonly', true);
			$("#_est_"+ci+"calificacion_final").prop('required', false);
			$("#_est_"+ci+"calificacion_final_A").prop('disabled', true);
			$("#_est_"+ci+"calificacion_final_AP").prop('disabled', true);
			$("#_est_"+ci+"np").prop('disabled', true);
		}else{
			$("#_"+ci+"calificacion_en_letras").val("POR DEFINIR");
			$("#_est_"+ci+"calificacion_final").prop('disabled', false);
			$("#_est_"+ci+"calificacion_final").prop('readonly', false);
			$("#_est_"+ci+"calificacion_final").prop('required', true);
			$("#_est_"+ci+"calificacion_final_A").prop('disabled', false);
			$("#_est_"+ci+"calificacion_final_AP").prop('disabled', false);
			$("#_est_"+ci+"pi").prop('disabled', false);
			$("#_est_"+ci+"np").prop('disabled', false);
		}

	}

	function numero_a_letras(valor, ci){

	switch (valor) {
		case '1':
			final = "CERO UNO";
			break;
		case '2':
			final = "CERO DOS";
			break;
		case '3':
			final = "CERO TRES";
			break;
		case '4':
			final = "CERO CUATRO";
			break;
		case '5':
			final = "CERO CINCO";
			break;
		case '6':
			final = "CERO SEIS";
			break;
		case '7':
			final = "CERO SIETE";
			break;
		case '8':
			final = "CERO OCHO";
			break;
		case '9':
			final = "CERO NUEVE";
			break;
		case '10':
			final = "DIEZ";
			break;
		case '11':
			final = "ONCE";
			break;
		case '12':
			final = "DOCE";
			break;
		case '13':
			final = "TRECE";
			break;
		case '14':
			final = "CATORCE";
			break;
		case '15':
			final = "QUINCE";
			break;
		case '16':
			final = "DIEZ Y SEIS";
			break;
		case '17':
			final = "DIEZ Y SIETE";
			break;
		case '18':
			final = "DIEZ Y OCHO";
			break;
		case '19':
			final = "DIEZ Y NUEVE";
			break;
		case '20':
			final = "VEINTE";
			break;
		default:
		final = "POR DEFINIR";
	}
			
		$("#_"+ci+"calificacion_en_letras").val(final);

	}


		

														
