- aux = @asignatura ? @asignatura.id : nil
= hidden_field_tag "[seccion]asignatura_id", aux
=# text_field_tag "[seccion]asignatura_id"
= hidden_field_tag "[seccion]periodo_id", current_periodo.id
= hidden_field_tag "back", asignaturas_path if controller_name.eql? 'asignaturas'

.form-group
  %label.control-label.col-md-12 Identificador
  .col-md-12
    = text_field_tag "[seccion]numero", @seccion.numero, {placeholder: 'Id. Sección...', class: 'form-control upcase', maxlength: 3, required: true}
    %small.text-muted.font-italic Máximo 3 catacteres alfanuméricos (Caracteres Especiales No permitido)

.form-group
  %label.control-label.col-md-12 Tipo de Sección
  .col-md-12
    - TipoSeccion.order("created_at DESC").all.reject{|t| t.id.eql? 'ND' or t.id.eql? 'NR'}.each do |ts| 
      
      %label.btn.btn-secondary.btn-sm.tooltip-btn{'data_toggle': :tooltip, title: ts.descripcion.titleize}
        = radio_button_tag '[seccion]tipo_seccion_id', ts.id, @seccion.tipo_seccion_id.eql?(ts.id), required: true
        = ts.id
.form-group
  %label.control-label.col-md-12 Capacidad
  .col-md-12
    = number_field_tag '[seccion]capacidad', 30, {placeholder: 'Capacidad', class: 'form-control', maxlength: 3, required: true, step: 1}

.form-group
  %label.control-label.col-md-12 Profesor Principal
  .col-md-12
    = grouped_collection_select :seccion, :profesor_id, @departamentos, :profesores, :descripcion, :id, :descripcion, {include_blank: 'Selecciona Departamento...', required: true}, { class: 'selects2 form-control text_field form-control-sm'}

:javascript

  $(document).ready(function() {

    $( ".selects2" ).select2({
      ajax: {
      url: "#{busquedas_usuarios_path}?profesores=true",
      dataType: 'json',
      delay: 250,
      processResults: function (data) {
        return {
          results: data
        };
      }     
      },
      placeholder: "--Escriba datos del profesor para buscarlo--",
      theme: "bootstrap",
      cache: true,
      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))}

    });
    
  });

  $('.upcase').on('input',function(evt){ 
    var node = $(this);
    node.val(node.val().toUpperCase());
    node.val(node.val().replace(/[^A-Z0-9]/g,'') );
  });